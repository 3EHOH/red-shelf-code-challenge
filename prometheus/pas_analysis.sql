/*PURPOSE: To create a three tables containing potentially avoidable service detail for reporting purposes. The table called ‘PAS_episodes_lines_attrib_code_mel_all’ contains a record for every episode and also provides the code level detail for any episode that has at least one potentially avoidable service. The table called ‘PAS_FLAG_all’ lists the cost, frequency, and type of PAS per unique episode. The table called ‘PAS_provider_avg’ lists the cost, frequency, and type of PAS per provider. *//*grab all PAS codes from relevant metadata.*/drop table if exists PAS;create table PAS asselect `episode_builder-5.4.005`.episode_to_code.episode_id,`episode_builder-5.4.005`.episode_to_code.code_value,`episode_builder-5.4.005`.episode_to_code.pas,`episode_builder-5.4.005`.`code`.`DESCRIPTION`,`episode_builder-5.4.005`.`code`.`GROUP_ID`from `episode_builder-5.4.005`.episode_to_codeleft join `episode_builder-5.4.005`.`code`on `episode_builder-5.4.005`.episode_to_code.code_value=`episode_builder-5.4.005`.`code`.value and `episode_builder-5.4.005`.episode_to_code.CODE_TYPE_ID=`episode_builder-5.4.005`.`code`.TYPE_IDwhere `episode_builder-5.4.005`.episode_to_code.pas = 1;/*create table with 1 row per PAS code and a flag for each episode it is in called PAS_by_epi_sum */ drop table if exists PAS_by_epi;create table PAS_by_epi asselectcode_value,DESCRIPTION,GROUP_ID,case when episode_id ='EA0101' then 1 else 0 end as EA0101,case when episode_id ='EA0303' then 1 else 0 end as EA0303,case when episode_id ='EA0403' then 1 else 0 end as EA0403,case when episode_id ='EA0506' then 1 else 0 end as EA0506,case when episode_id ='EA0807' then 1 else 0 end as EA0807,case when episode_id ='EC0202' then 1 else 0 end as EC0202,case when episode_id ='EC0301' then 1 else 0 end as EC0301,case when episode_id ='EC0401' then 1 else 0 end as EC0401,case when episode_id ='EC0402' then 1 else 0 end as EC0402,case when episode_id ='EC0508' then 1 else 0 end as EC0508,case when episode_id ='EC0510' then 1 else 0 end as EC0510,case when episode_id ='EC0511' then 1 else 0 end as EC0511,case when episode_id ='EC0518' then 1 else 0 end as EC0518,case when episode_id ='EC0521' then 1 else 0 end as EC0521,case when episode_id ='EC0601' then 1 else 0 end as EC0601,case when episode_id ='EC0615' then 1 else 0 end as EC0615,case when episode_id ='EC0801' then 1 else 0 end as EC0801,case when episode_id ='EC0802' then 1 else 0 end as EC0802,case when episode_id ='EC1001' then 1 else 0 end as EC1001,case when episode_id ='EC1902' then 1 else 0 end as EC1902,case when episode_id ='EC1903' then 1 else 0 end as EC1903,case when episode_id ='EC1904' then 1 else 0 end as EC1904,case when episode_id ='EC1905' then 1 else 0 end as EC1905,case when episode_id ='EP0202' then 1 else 0 end as EP0202,case when episode_id ='EP0301' then 1 else 0 end as EP0301,case when episode_id ='EP0509' then 1 else 0 end as EP0509,case when episode_id ='EP0510' then 1 else 0 end as EP0510,case when episode_id ='EP0520' then 1 else 0 end as EP0520,case when episode_id ='EP0601' then 1 else 0 end as EP0601,case when episode_id ='EP0602' then 1 else 0 end as EP0602,case when episode_id ='EP0603' then 1 else 0 end as EP0603,case when episode_id ='EP0604' then 1 else 0 end as EP0604,case when episode_id ='EP0610' then 1 else 0 end as EP0610,case when episode_id ='EP0811' then 1 else 0 end as EP0811,case when episode_id ='EP0812' then 1 else 0 end as EP0812,case when episode_id ='EP0813' then 1 else 0 end as EP0813,case when episode_id ='EP0816' then 1 else 0 end as EP0816,case when episode_id ='EP0817' then 1 else 0 end as EP0817,case when episode_id ='EP0821' then 1 else 0 end as EP0821,case when episode_id ='EP0822' then 1 else 0 end as EP0822,case when episode_id ='EP0902' then 1 else 0 end as EP0902,case when episode_id ='EP0904' then 1 else 0 end as EP0904,case when episode_id ='EP1202' then 1 else 0 end as EP1202,case when episode_id ='EP1203' then 1 else 0 end as EP1203,case when episode_id ='EP1301' then 1 else 0 end as EP1301,case when episode_id ='EP1403' then 1 else 0 end as EP1403,case when episode_id ='EP1404' then 1 else 0 end as EP1404,case when episode_id ='ES9901' then 1 else 0 end as ES9901,case when episode_id ='EX0402' then 1 else 0 end as EX0402,case when episode_id ='EX0601' then 1 else 0 end as EX0601,case when episode_id ='EX0602' then 1 else 0 end as EX0602,case when episode_id ='EX0902' then 1 else 0 end as EX0902,case when episode_id ='EX1201' then 1 else 0 end as EX1201,case when episode_id ='EX1401' then 1 else 0 end as EX1401,case when episode_id ='EX9901' then 1 else 0 end as EX9901from PAS;drop table if exists PAS_by_epi_sum;create table PAS_by_epi_sum asselect code_value,DESCRIPTION,GROUP_ID,case when sum(EA0101)>0 then 1 else 0 end as EA0101,case when sum(EA0303)>0 then 1 else 0 end as EA0303,case when sum(EA0403)>0 then 1 else 0 end as EA0403,case when sum(EA0506)>0 then 1 else 0 end as EA0506,case when sum(EA0807)>0 then 1 else 0 end as EA0807,case when sum(EC0202)>0 then 1 else 0 end as EC0202,case when sum(EC0301)>0 then 1 else 0 end as EC0301,case when sum(EC0401)>0 then 1 else 0 end as EC0401,case when sum(EC0402)>0 then 1 else 0 end as EC0402,case when sum(EC0508)>0 then 1 else 0 end as EC0508,case when sum(EC0510)>0 then 1 else 0 end as EC0510,case when sum(EC0511)>0 then 1 else 0 end as EC0511,case when sum(EC0518)>0 then 1 else 0 end as EC0518,case when sum(EC0521)>0 then 1 else 0 end as EC0521,case when sum(EC0601)>0 then 1 else 0 end as EC0601,case when sum(EC0615)>0 then 1 else 0 end as EC0615,case when sum(EC0801)>0 then 1 else 0 end as EC0801,case when sum(EC0802)>0 then 1 else 0 end as EC0802,case when sum(EC1001)>0 then 1 else 0 end as EC1001,case when sum(EC1902)>0 then 1 else 0 end as EC1902,case when sum(EC1903)>0 then 1 else 0 end as EC1903,case when sum(EC1904)>0 then 1 else 0 end as EC1904,case when sum(EC1905)>0 then 1 else 0 end as EC1905,case when sum(EP0202)>0 then 1 else 0 end as EP0202,case when sum(EP0301)>0 then 1 else 0 end as EP0301,case when sum(EP0509)>0 then 1 else 0 end as EP0509,case when sum(EP0510)>0 then 1 else 0 end as EP0510,case when sum(EP0520)>0 then 1 else 0 end as EP0520,case when sum(EP0601)>0 then 1 else 0 end as EP0601,case when sum(EP0602)>0 then 1 else 0 end as EP0602,case when sum(EP0603)>0 then 1 else 0 end as EP0603,case when sum(EP0604)>0 then 1 else 0 end as EP0604,case when sum(EP0610)>0 then 1 else 0 end as EP0610,case when sum(EP0811)>0 then 1 else 0 end as EP0811,case when sum(EP0812)>0 then 1 else 0 end as EP0812,case when sum(EP0813)>0 then 1 else 0 end as EP0813,case when sum(EP0816)>0 then 1 else 0 end as EP0816,case when sum(EP0817)>0 then 1 else 0 end as EP0817,case when sum(EP0821)>0 then 1 else 0 end as EP0821,case when sum(EP0822)>0 then 1 else 0 end as EP0822,case when sum(EP0902)>0 then 1 else 0 end as EP0902,case when sum(EP0904)>0 then 1 else 0 end as EP0904,case when sum(EP1202)>0 then 1 else 0 end as EP1202,case when sum(EP1203)>0 then 1 else 0 end as EP1203,case when sum(EP1301)>0 then 1 else 0 end as EP1301,case when sum(EP1403)>0 then 1 else 0 end as EP1403,case when sum(EP1404)>0 then 1 else 0 end as EP1404,case when sum(ES9901)>0 then 1 else 0 end as ES9901,case when sum(EX0402)>0 then 1 else 0 end as EX0402,case when sum(EX0601)>0 then 1 else 0 end as EX0601,case when sum(EX0602)>0 then 1 else 0 end as EX0602,case when sum(EX0902)>0 then 1 else 0 end as EX0902,case when sum(EX1201)>0 then 1 else 0 end as EX1201,case when sum(EX1401)>0 then 1 else 0 end as EX1401,case when sum(EX9901)>0 then 1 else 0 end as EX9901from PAS_by_epigroup by code_value;/*grab assigned claims for all episodes with PAS codes*/drop table if exists PAS_episodes;create table PAS_episodes asselect left(master_episode_id, 6) as episode_id,assignment.*from assignmentwhere left(master_episode_id, 6) in ('EA0101',	'EA0303',	'EA0403',	'EA0506',	'EA0807',	'EC0202',	'EC0301',	'EC0401',	'EC0402',	'EC0508',	'EC0510',	'EC0511',	'EC0518',	'EC0521',	'EC0601',	'EC0615',	'EC0801',	'EC0802',	'EC1001',	'EC1902',	'EC1903',	'EC1904',	'EC1905',	'EP0202',	'EP0301',	'EP0509',	'EP0510',	'EP0520',	'EP0601',	'EP0602',	'EP0603',	'EP0604',	'EP0610',	'EP0811',	'EP0812',	'EP0813',	'EP0816',	'EP0817',	'EP0821',	'EP0822',	'EP0902',	'EP0904',	'EP1202',	'EP1203',	'EP1301',	'EP1403',	'EP1404',	'ES9901',	'EX0402',	'EX0601',	'EX0602',	'EX0902',	'EX1201',	'EX1401',	'EX9901');/*grab line information for those claims*/drop table if exists PAS_episodes_lines;create table PAS_episodes_lines asselectleft(PAS_episodes.master_episode_id, 6) as episode_id,PAS_episodes.member_id,PAS_episodes.master_episode_id,PAS_episodes.master_claim_id,PAS_episodes.assigned_type,PAS_episodes.assigned_count,PAS_episodes.rule,claim_line.allowed_amt,claim_line.provider_id as claim_provider_id,claim_line.claim_line_type_code,claim_line.begin_date,claim_line.end_date,claim_line.idfrom PAS_episodesleft join claim_lineon PAS_episodes.master_claim_id=claim_line.master_claim_id;drop table if exists PAS_episodes_lines_attrib;create table PAS_episodes_lines_attrib asselect PAS_episodes_lines.*,episode.attrib_default_physician,episode.attrib_default_facility,episode.episode_begin_date,episode.episode_end_date,DATEDIFF(episode.episode_end_date,PAS_episodes_lines.begin_date)  as Days_from_epi_endfrom PAS_episodes_linesjoin episodeon PAS_episodes_lines.master_episode_id=episode.master_episode_idwhere left(PAS_episodes_lines.master_episode_id,2)="EC" and DATEDIFF(episode.episode_end_date,PAS_episodes_lines.begin_date) <=365unionselect PAS_episodes_lines.*,episode.attrib_default_physician,episode.attrib_default_facility,episode.episode_begin_date,episode.episode_end_date,DATEDIFF(episode.episode_end_date,PAS_episodes_lines.begin_date)  as Days_from_epi_endfrom PAS_episodes_linesjoin episodeon PAS_episodes_lines.master_episode_id=episode.master_episode_idwhere left(PAS_episodes_lines.master_episode_id,2) <> "EC" ;/* merge on codes*/create index ucid on code(u_c_id);create index paselaid on PAS_episodes_lines_attrib(id);drop table if exists PAS_code;create index PAS on PAS(code_value);create index codefpas on code(code_value);create table PAS_code asselectPAS.episode_id,code.u_c_id,code.code_value,code.principalfrom PASjoin codeon PAS.code_value=code.code_valuewhere PAS.pas=1 and code.nomen in ('CPT','HCPC','PX');drop table if exists PAS_episodes_lines_attrib_code;create table PAS_episodes_lines_attrib_code asselect PAS_episodes_lines_attrib.*,PAS_code.code_value,PAS_code.principalfrom PAS_episodes_lines_attribjoin PAS_codeon PAS_episodes_lines_attrib.episode_id = PAS_code.episode_id and PAS_episodes_lines_attrib.id=PAS_code.u_c_id;/* merge on total cost of episode from mel at level complete*/drop table if exists PAS_episodes_lines_attrib_code_mel;create table PAS_episodes_lines_attrib_code_mel asselect PAS_episodes_lines_attrib_code.*,master_epid_level.filter_id,master_epid_level.costfrom PAS_episodes_lines_attrib_codejoin master_epid_levelon PAS_episodes_lines_attrib_code.master_episode_id= master_epid_level.master_episode_id
where (left(master_epid_level.master_episode_id,2) in ("EC ","EX") and master_epid_level.claim_type="CL" and level=5 and annualized=1 and split=0)or (left(master_epid_level.master_episode_id,2) = "EA" and master_epid_level.claim_type="CL" and level=4 and annualized=0 and split=0)or (left(master_epid_level.master_episode_id,2) = "EP" and master_epid_level.claim_type="CL" and level=3 and annualized=0 and split=0);/*keep all episodes with or without PAS*/create index pasme on  PAS_episodes_lines_attrib_code_mel(master_episode_id);create index pasmeap on  PAS_episodes_lines_attrib_code_mel(attrib_default_physician);create index pasmeaf on  PAS_episodes_lines_attrib_code_mel(attrib_default_facility);create index epasme on  episode(master_episode_id);create index epasmeap on  episode(attrib_default_physician);create index epasmeaf on  episode(attrib_default_facility);drop table if exists PAS_episodes_lines_attrib_code_mel_all;create table PAS_episodes_lines_attrib_code_mel_all asselect episode.episode_id,episode.member_id,episode.master_episode_id,PAS_episodes_lines_attrib_code_mel.master_claim_id,PAS_episodes_lines_attrib_code_mel.assigned_type,PAS_episodes_lines_attrib_code_mel.rule,PAS_episodes_lines_attrib_code_mel.assigned_count,PAS_episodes_lines_attrib_code_mel.allowed_amt,PAS_episodes_lines_attrib_code_mel.claim_provider_id,PAS_episodes_lines_attrib_code_mel.claim_line_type_code,PAS_episodes_lines_attrib_code_mel.begin_date,PAS_episodes_lines_attrib_code_mel.end_date,PAS_episodes_lines_attrib_code_mel.id,episode.attrib_default_physician,episode.attrib_default_facility,PAS_episodes_lines_attrib_code_mel.episode_begin_date,PAS_episodes_lines_attrib_code_mel.episode_end_date,PAS_episodes_lines_attrib_code_mel.Days_from_epi_end,PAS_episodes_lines_attrib_code_mel.code_value,PAS_episodes_lines_attrib_code_mel.principal,PAS_episodes_lines_attrib_code_mel.filter_id,PAS_episodes_lines_attrib_code_mel.costfrom PAS_episodes_lines_attrib_code_melright join episodeon PAS_episodes_lines_attrib_code_mel.master_episode_id=episode.master_episode_id where left(episode.master_episode_id,2)<>"ES";/*sum count of PAS codes and costs in each episode*/drop table if exists PAS_flag;create table PAS_flag asselectsum(case when code_value in ('78451','78452','78453','78454','78460','78461','78464','78465','78472','78473','78481','78483','78491','78492','93015','93016','93017','93018','93350','93351','93352','78459','78478','78480','78494','78496','78499','93355','S3904' ) then 1 else 0 end) as  'Cardiac Stress Test',sum(case when  code_value in ('93303','93304','93306','93307','93308','93312','93313','93314','93318','93315','93316','93317','78414','78428','93305','C1759','C8921','C8922','C8923','C8924','C8925','C8926','C8927','C8928','C8929','C8930','G8395','93320','93321','93325') then 1 else 0 end) as  'Heart echo',sum(case when  code_value in ('93000','93005','93010','93040','93041','93042') then 1 else 0 end) as  'Electrocardiogram',sum(case when  code_value in ('75552','75553','75559','75563','75571','75574','78466','78468','78469') then 1 else 0 end) as  'Other Cardiac Imaging',sum(case when  code_value in ('93561','93562','93571','93572','75756','92978','92979','93451','93452','93453','93454','93455','93456','93457','93458','93459','93460','93461','93462','93501','93508','93510','93511','93514','93524','93526','93527','93528','93529','93530','93531','93532','93533','93539','93540','93541','93542','93543','93544','93545','93555','93556','93561','93562','93571','93572') then 1 else 0 end) as  'Cardiac Cath and Angiography',sum(case when  code_value in ('72131','72132','72133','72128','72129','72130','72125','72126','72127') then 1 else 0 end) as  'CT Spine',sum(case when  code_value in ('72141','72142','72146','72147','72148','72149','72156','72157','72158') then 1 else 0 end) as  'MRI Spine',sum(case when  code_value in ('72010','72020','72052','72069','72070','72072','72074','72080','72100','72110','72114','72120','72200','72202','72220') then 1 else 0 end) as  'X-Ray Spine',sum(case when  code_value in ('J0878','J1267','J1590','J2280','Q0144','S0034','S0039') then 1 else 0 end) as  'Antibiotics',sum(case when  code_value='85002' then 1 else 0 end) as  'Anticoagulant Management',sum(case when  code_value in ('85300','85303','85305','85306','85613') then 1 else 0 end) as  Anticoagulants,sum(case when  code_value in ('94640','94644','94645','94664','J7605','J7606','J7607','J7609','J7610','J7611','J7612','J7613','J7614','J7615','J7620','J7628','J7629','J7631','J7632','J7640','J7642','J7643','J7644','J7645','J7647','J7648','J7649','J7650','J7657','J7658','J7659','J7660','J7667','J7668','J7669','J7670','J7680','J7681') then 1 else 0 end) as  'Asthma inhalers',sum(case when  code_value in ('94760','94761','94762') then 1 else 0 end) as  'Blood Gases, Pulse Oximetry',sum(case when  code_value in ('36430','P9010','P9021') then 1 else 0 end) as  'Blood Transfusion',sum(case when  code_value in ('76977','77078','77079','77080','77081','77082','77083','78350','78351','G0130') then 1 else 0 end) as  'Bone Density',sum(case when  code_value in ('0028T''3269F''3270F') then 1 else 0 end) as  'Bone Scan',sum(case when  code_value in ('95812','95813','95816','95819','95822','95827','95830','95957') then 1 else 0 end) as  'Brain EEG',sum(case when  code_value in ('71010','71015','71020','71021','71022','71023','71030','71034','71035') then 1 else 0 end) as  'Chest X-Ray',sum(case when  code_value in ('94642','94660','94662','94776') then 1 else 0 end) as  'CPAP and other Respiratory Treatments',sum(case when  code_value in ('74150''74160','74170') then 1 else 0 end) as  'CT abdomen',sum(case when  code_value in ('71250','71260','71270','71275') then 1 else 0 end) as  'CT or CTA Chest',sum(case when  code_value in ('70450','70460','70470','70496','70498') then 1 else 0 end) as  'CT or CTA Head',sum(case when  code_value in ('72191','72192','72193','72194') then 1 else 0 end) as  'CT or CTA pelvis',sum(case when  code_value in ('70480','70481','70482','70486','70487','70488','70540','70542','70543') then 1 else 0 end) as  'CT or MRI facial area orbit post fossa',sum(case when  code_value in ('70490','70491','70492') then 1 else 0 end) as  'CT soft tissues neck',sum(case when  code_value in ('37191','75940') then 1 else 0 end) as  'DVT Management - IVC filter',sum(case when  code_value='37619' then 1 else 0 end) as  'DVT Management - Ligation of IVC' ,sum(case when  code_value in ('99350','99507') then 1 else 0 end) as  'Home visit' ,sum(case when  code_value in ('90284','90281','90283','90291','J0850','J1460','J1559','J1560','J1561','J1562','J1566','J1568','J1569','J1572','J1599') then 1 else 0 end) as  'Immunoglobulin Antibiodies' ,sum(case when  code_value in ('51701','51702''51703') then 1 else 0 end) as  'Indwelling bladder catheter' ,sum(case when  code_value in ('35301','37205','75960','75996') then 1 else 0 end) as  'Intravascular stent, thromboendarterectomy' ,sum(case when  code_value in ('80047','80048','80049','80050','80051','80052','80053','80069','80074','80076','82306','82307','82485','82565','82570','82575','82607','82652','82746','82747','82784','82785','82787','83090','84153','84460','85025','85027','84481') then 1 else 0 end) as  'Lab tests CBC Blood Chemistry' ,sum(case when  code_value='G0103' then 1 else 0 end) as  'PSA Screening' ,sum(case when  code_value in ('80061','82465','83695','83698','83700','83701','83704','83718','83719','83721','84478') then 1 else 0 end) as  'Lipid Panel' ,sum(case when  code_value in ('78580','94010','94726','94727','94728','94729','94770') then 1 else 0 end) as  'Lung Function Tests' ,sum(case when  code_value in ('94667','94668','94669') then 1 else 0 end) as  'Lung Percussion',sum(case when  code_value='78582' then 1 else 0 end) as  'Lung Scan' ,sum(case when  code_value in ('70551','70552','70553','70554','70555') then 1 else 0 end) as  'MRI Brain' ,sum(case when  code_value in ('71550','71551','71552') then 1 else 0 end) as  'MRI Chest' ,sum(case when  code_value in ('73721','73722','73723') then 1 else 0 end) as  'MRI lower extremity' ,sum(case when  code_value in ('73221','73222','73223') then 1 else 0 end) as  'MRI upper extremity' ,sum(case when  code_value='J2175' then 1 else 0 end) as  'Pain relief' ,sum(case when  code_value in ('88141','88142','88143','88147','88148','88150','88152','88153','88154','88155','88164','88165','88166','88167','88174','88175','G0123','G0124','G0141','G0143','G0144','G0145','G0147','G0148','P3000','P3001','Q0091') then 1 else 0 end) as  'Pap smear' ,sum(case when  code_value='G0101' then 1 else 0 end) as  'Screening Pelvic Breast' ,sum(case when  code_value='4135F' then 1 else 0 end) as  'Steroids' ,sum(case when  code_value in ('86001','86003','86005','86147','86617','86618','87620','87621','87622') then 1 else 0 end) as  'Tests for allergens antibodies infectious agents' ,sum(case when  code_value in ('78811','78812','78813','78814','78815','78816') then 1 else 0 end) as  'Tumor Imaging' ,sum(case when  code_value in ('76700','76705','76830','76856','76857','G8806') then 1 else 0 end) as  'Ultrasound abdomen / pelvis',sum(case when  code_value in ('93880','93882') then 1 else 0 end) as  'Ultrasound extracranial arteries',sum(case when  code_value in ('76881','76882')then 1 else 0 end) as  'Ultrasound extremities' ,sum(case when  code_value in ('78456','78457','78458') then 1 else 0 end) as  'Venous thrombosis imaging' ,sum(allowed_amt) as PAS_costs,master_episode_id,episode_idfrom PAS_episodes_lines_attrib_code_mel_allgroup by master_episode_id;drop table if exists PAS_FLAG_all;create index pasepiid on PAS_flag(master_episode_id);create table PAS_FLAG_all asselectsum( `PAS_flag`.`Antibiotics`+`PAS_flag`.`Anticoagulant Management`+`PAS_flag`.`Anticoagulants`+`PAS_flag`.`Asthma inhalers`+`PAS_flag`.`Blood Gases, Pulse Oximetry`+`PAS_flag`.`Blood Transfusion`+`PAS_flag`.`Bone Density`+`PAS_flag`.`Bone Scan`+`PAS_flag`.`Brain EEG`+`PAS_flag`.`Cardiac Cath and Angiography`+`PAS_flag`.`Cardiac Stress Test`+`PAS_flag`.`Chest X-Ray`+`PAS_flag`.`CPAP and other Respiratory Treatments`+`PAS_flag`.`CT abdomen`+`PAS_flag`.`CT or CTA Chest`+`PAS_flag`.`CT or CTA Head`+`PAS_flag`.`CT or CTA pelvis`+`PAS_flag`.`CT or MRI facial area orbit post fossa`+`PAS_flag`.`CT soft tissues neck`+`PAS_flag`.`CT Spine`+`PAS_flag`.`DVT Management - IVC filter`+`PAS_flag`.`DVT Management - Ligation of IVC`+`PAS_flag`.`Electrocardiogram`+`PAS_flag`.`Heart echo`+`PAS_flag`.`Home visit`+`PAS_flag`.`Immunoglobulin Antibiodies`+`PAS_flag`.`Indwelling bladder catheter`+`PAS_flag`.`Intravascular stent, thromboendarterectomy`+`PAS_flag`.`Lab tests CBC Blood Chemistry`+`PAS_flag`.`Lipid Panel`+`PAS_flag`.`Lung Function Tests`+`PAS_flag`.`Lung Percussion`+`PAS_flag`.`Lung Scan`+`PAS_flag`.`MRI Brain`+`PAS_flag`.`MRI Chest`+`PAS_flag`.`MRI lower extremity`+`PAS_flag`.`MRI Spine`+`PAS_flag`.`MRI upper extremity`+`PAS_flag`.`Other Cardiac Imaging`+`PAS_flag`.`Pain relief`+`PAS_flag`.`Pap smear`+`PAS_flag`.`PSA Screening`+`PAS_flag`.`Screening Pelvic Breast`+`PAS_flag`.`Steroids`+`PAS_flag`.`Tests for allergens antibodies infectious agents`+`PAS_flag`.`Tumor Imaging`+`PAS_flag`.`Ultrasound abdomen / pelvis`+`PAS_flag`.`Ultrasound extracranial arteries`+`PAS_flag`.`Ultrasound extremities`+`PAS_flag`.`Venous thrombosis imaging`+`PAS_flag`.`X-Ray Spine`) as PAS_flag,PAS_flag.PAS_costs,`PAS_flag`.`Antibiotics`,`PAS_flag`.`Anticoagulant Management`,`PAS_flag`.`Anticoagulants`,`PAS_flag`.`Asthma inhalers`,`PAS_flag`.`Blood Gases, Pulse Oximetry`,`PAS_flag`.`Blood Transfusion`,`PAS_flag`.`Bone Density`,`PAS_flag`.`Bone Scan`,`PAS_flag`.`Brain EEG`,`PAS_flag`.`Cardiac Cath and Angiography`,`PAS_flag`.`Cardiac Stress Test`,`PAS_flag`.`Chest X-Ray`,`PAS_flag`.`CPAP and other Respiratory Treatments`,`PAS_flag`.`CT abdomen`,`PAS_flag`.`CT or CTA Chest`,`PAS_flag`.`CT or CTA Head`,`PAS_flag`.`CT or CTA pelvis`,`PAS_flag`.`CT or MRI facial area orbit post fossa`,`PAS_flag`.`CT soft tissues neck`,`PAS_flag`.`CT Spine`,`PAS_flag`.`DVT Management - IVC filter`,`PAS_flag`.`DVT Management - Ligation of IVC`,`PAS_flag`.`Electrocardiogram`,`PAS_flag`.`Heart echo`,`PAS_flag`.`Home visit`,`PAS_flag`.`Immunoglobulin Antibiodies`,`PAS_flag`.`Indwelling bladder catheter`,`PAS_flag`.`Intravascular stent, thromboendarterectomy`,`PAS_flag`.`Lab tests CBC Blood Chemistry`,`PAS_flag`.`Lipid Panel`,`PAS_flag`.`Lung Function Tests`,`PAS_flag`.`Lung Percussion`,`PAS_flag`.`Lung Scan`,`PAS_flag`.`MRI Brain`,`PAS_flag`.`MRI Chest`,`PAS_flag`.`MRI lower extremity`,`PAS_flag`.`MRI Spine`,`PAS_flag`.`MRI upper extremity`,`PAS_flag`.`Other Cardiac Imaging`,`PAS_flag`.`Pain relief`,`PAS_flag`.`Pap smear`,`PAS_flag`.`PSA Screening`,`PAS_flag`.`Screening Pelvic Breast`,`PAS_flag`.`Steroids`,`PAS_flag`.`Tests for allergens antibodies infectious agents`,`PAS_flag`.`Tumor Imaging`,`PAS_flag`.`Ultrasound abdomen / pelvis`,`PAS_flag`.`Ultrasound extracranial arteries`,`PAS_flag`.`Ultrasound extremities`,`PAS_flag`.`Venous thrombosis imaging`,`PAS_flag`.`X-Ray Spine`,red.*from report_episode_detail redleft join PAS_flagon red.master_episode_id=PAS_flag.master_episode_idwhere left(red.master_episode_id, 6) in ('EA0101',	'EA0303',	'EA0403',	'EA0506',	'EA0807',	'EC0202',	'EC0301',	'EC0401',	'EC0402',	'EC0508',	'EC0510',	'EC0511',	'EC0518',	'EC0521',	'EC0601',	'EC0615',	'EC0801',	'EC0802',	'EC1001',	'EC1902',	'EC1903',	'EC1904',	'EC1905',	'EP0202',	'EP0301',	'EP0509',	'EP0510',	'EP0520',	'EP0601',	'EP0602',	'EP0603',	'EP0604',	'EP0610',	'EP0811',	'EP0812',	'EP0813',	'EP0816',	'EP0817',	'EP0821',	'EP0822',	'EP0902',	'EP0904',	'EP1202',	'EP1203',	'EP1301',	'EP1403',	'EP1404',	'ES9901',	'EX0402',	'EX0601',	'EX0602',	'EX0902',	'EX1201',	'EX1401',	'EX9901')group by red.master_episode_id, red.level, red.filter_id;drop table if exists PAS_provider_avg;create table PAS_provider_avg asselectepisode_id,case when left(episode_id, 2) in ("EP","EA") then Facility_ID else Physician_ID end as PROVIDER,level,
filter_id,count(distinct master_episodE_id) as episode_count,sum(case when PAS_flag >=1 then 1 else 0 end ) as PAS_EPISODE_COUNT,sum(case when PAS_flag >=1 then 1 else 0 end) /count(distinct master_episodE_id)  as PERCENT_PTS_W_PAS,sum(`PAS_costs`) as PAS_COSTS,sum(`PAS_costs`) /count(distinct master_episode_id) as AVG_PAS_COSTS,sum(`Split_Total_Cost`) /count(distinct master_episode_id) as AVG_SPLIT_COSTS,sum(`Annualized_Split_Total_Cost`) /count(distinct master_episode_id) as AVG_ANNUAL_SPLIT_COSTS , sum(`Antibiotics`) as 'Antibiotics',sum(`Anticoagulant Management`) as 'Anticoagulant Management',sum(`Anticoagulants`) as 'Anticoagulants',sum(`Asthma inhalers`) as 'Asthma inhalers',sum(`Blood Gases, Pulse Oximetry`) as 'Blood Gases, Pulse Oximetry',sum(`Blood Transfusion`) as 'Blood Transfusion',sum(`Bone Density`) as 'Bone Density',sum(`Bone Scan`) as 'Bone Scan',sum(`Brain EEG`) as 'Brain EEG',sum(`Cardiac Cath and Angiography`) as 'Cardiac Cath and Angiography',sum(`Cardiac Stress Test`) as 'Cardiac Stress Test',sum(`Chest X-Ray`) as 'Chest X-Ray',sum(`CPAP and other Respiratory Treatments`) as 'CPAP and other Respiratory Treatments',sum(`CT abdomen`) as 'CT abdomen',sum(`CT or CTA Chest`) as 'CT or CTA Chest',sum(`CT or CTA Head`) as 'CT or CTA Head',sum(`CT or CTA pelvis`) as 'CT or CTA pelvis',sum(`CT or MRI facial area orbit post fossa`) as 'CT or MRI facial area orbit post fossa',sum(`CT soft tissues neck`) as 'CT soft tissues neck',sum(`CT Spine`) as 'CT Spine',sum(`DVT Management - IVC filter`) as 'DVT Management - IVC filter',sum(`DVT Management - Ligation of IVC`) as 'DVT Management - Ligation of IVC',sum(`Electrocardiogram`) as 'Electrocardiogram',sum(`Heart echo`) as 'Heart echo',sum(`Home visit`) as 'Home visit',sum(`Immunoglobulin Antibiodies`) as 'Immunoglobulin Antibiodies',sum(`Indwelling bladder catheter`) as 'Indwelling bladder catheter',sum(`Intravascular stent, thromboendarterectomy`) as 'Intravascular stent, thromboendarterectomy',sum(`Lab tests CBC Blood Chemistry`) as 'Lab tests CBC Blood Chemistry',sum(`Lipid Panel`) as 'Lipid Panel',sum(`Lung Function Tests`) as 'Lung Function Tests',sum(`Lung Percussion`) as 'Lung Percussion',sum(`Lung Scan`) as 'Lung Scan',sum(`MRI Brain`) as 'MRI Brain',sum(`MRI Chest`) as 'MRI Chest',sum(`MRI lower extremity`) as 'MRI lower extremity',sum(`MRI Spine`) as 'MRI Spine',sum(`MRI upper extremity`) as 'MRI upper extremity',sum(`Other Cardiac Imaging`) as 'Other Cardiac Imaging',sum(`Pain relief`) as 'Pain relief',sum(`Pap smear`) as 'Pap smear',sum(`PSA Screening`) as 'PSA Screening',sum(`Screening Pelvic Breast`) as 'Screening Pelvic Breast',sum(`Steroids`) as 'Steroids',sum(`Tests for allergens antibodies infectious agents`) as 'Tests for allergens antibodies infectious agents',sum(`Tumor Imaging`) as 'Tumor Imaging',sum(`Ultrasound abdomen / pelvis`) as 'Ultrasound abdomen / pelvis',sum(`Ultrasound extracranial arteries`) as 'Ultrasound extracranial arteries',sum(`Ultrasound extremities`) as 'Ultrasound extremities',sum(`Venous thrombosis imaging`) as 'Venous thrombosis imaging',sum(`X-Ray Spine`) as 'X-Ray Spine',sum(`Antibiotics`)/count(distinct master_episode_id)  as 'AVG Antibiotics',sum(`Anticoagulant Management`)/count(distinct master_episode_id)  as 'AVG Anticoagulant Management',sum(`Anticoagulants`)/count(distinct master_episode_id)  as 'AVG Anticoagulants',sum(`Asthma inhalers`) /count(distinct master_episode_id) as 'AVG Asthma inhalers',sum(`Blood Gases, Pulse Oximetry`)/count(distinct master_episode_id)  as 'AVG Blood Gases, Pulse Oximetry',sum(`Blood Transfusion`)/count(distinct master_episode_id)  as 'AVG Blood Transfusion',sum(`Bone Density`)/count(distinct master_episode_id)  as 'AVG Bone Density',sum(`Bone Scan`)/count(distinct master_episode_id)  as 'AVG Bone Scan',sum(`Brain EEG`)/count(distinct master_episode_id)  as 'AVG Brain EEG',sum(`Cardiac Cath and Angiography`)/count(distinct master_episode_id)  as 'AVG Cardiac Cath and Angiography',sum(`Cardiac Stress Test`)/count(distinct master_episode_id)  as 'AVG Cardiac Stress Test',sum(`Chest X-Ray`)/count(distinct master_episode_id)  as 'AVG Chest X-Ray',sum(`CPAP and other Respiratory Treatments`)/count(distinct master_episode_id)  as 'AVG CPAP and other Respiratory Treatments',sum(`CT abdomen`)/count(distinct master_episode_id)  as 'AVG CT abdomen',sum(`CT or CTA Chest`)/count(distinct master_episode_id)  as 'AVG CT or CTA Chest',sum(`CT or CTA Head`)/count(distinct master_episode_id)  as 'AVG CT or CTA Head',sum(`CT or CTA pelvis`)/count(distinct master_episode_id)  as 'AVG CT or CTA pelvis' ,sum(`CT or MRI facial area orbit post fossa`)/count(distinct master_episode_id)  as 'AVG CT or MRI facial area orbit post fossa',sum(`CT soft tissues neck`)/count(distinct master_episode_id)  as 'AVG CT soft tissues neck',sum(`CT Spine`)/count(distinct master_episode_id)  as 'AVG CT Spine',sum(`DVT Management - IVC filter`)/count(distinct master_episode_id)  as 'AVG DVT Management - IVC filter',sum(`DVT Management - Ligation of IVC`)/count(distinct master_episode_id)  as 'AVG DVT Management - Ligation of IVC',sum(`Electrocardiogram`)/count(distinct master_episode_id)  as 'AVG Electrocardiogram',sum(`Heart echo`)/count(distinct master_episode_id)  as 'AVG Heart echo',sum(`Home visit`)/count(distinct master_episode_id)  as 'AVG Home visit',sum(`Immunoglobulin Antibiodies`)/count(distinct master_episode_id)  as 'AVG Immunoglobulin Antibiodies',sum(`Indwelling bladder catheter`)/count(distinct master_episode_id)  as 'AVG Indwelling bladder catheter',sum(`Intravascular stent, thromboendarterectomy`)/count(distinct master_episode_id)  as 'AVG Intravascular stent, thromboendarterectomy',sum(`Lab tests CBC Blood Chemistry`)/count(distinct master_episode_id)  as 'AVG Lab tests CBC Blood Chemistry',sum(`Lipid Panel`)/count(distinct master_episode_id)  as 'AVG Lipid Panel',sum(`Lung Function Tests`)/count(distinct master_episode_id)  as 'AVG Lung Function Tests',sum(`Lung Percussion`)/count(distinct master_episode_id)  as 'AVG Lung Percussion',sum(`Lung Scan`)/count(distinct master_episode_id)  as 'AVG Lung Scan',sum(`MRI Brain`)/count(distinct master_episode_id) as 'AVG MRI Brain',sum(`MRI Chest`)/count(distinct master_episode_id)  as 'AVG MRI Chest',sum(`MRI lower extremity`) /count(distinct master_episode_id) as 'AVG MRI lower extremity',sum(`MRI Spine`)/count(distinct master_episode_id)  as 'AVG MRI Spine',sum(`MRI upper extremity`)/count(distinct master_episode_id)  as 'AVG MRI upper extremity',sum(`Other Cardiac Imaging`)/count(distinct master_episode_id)  as 'AVG Other Cardiac Imaging',sum(`Pain relief`) /count(distinct master_episode_id) as 'AVG Pain relief',sum(`Pap smear`) /count(distinct master_episode_id) as 'AVG Pap smear',sum(`PSA Screening`)/count(distinct master_episode_id)  as 'AVG PSA Screening',sum(`Screening Pelvic Breast`)/count(distinct master_episode_id)  as 'AVG Screening Pelvic Breast',sum(`Steroids`)/count(distinct master_episode_id)  as 'AVG Steroids',sum(`Tests for allergens antibodies infectious agents`)/count(distinct master_episode_id)  as 'AVG Tests for allergens antibodies infectious agents',sum(`Tumor Imaging`)/count(distinct master_episode_id)  as 'AVG Tumor Imaging',sum(`Ultrasound abdomen / pelvis`)/count(distinct master_episode_id)  as 'AVG Ultrasound abdomen / pelvis',sum(`Ultrasound extracranial arteries`)/count(distinct master_episode_id)  as 'AVG Ultrasound extracranial arteries',sum(`Ultrasound extremities`)/count(distinct master_episode_id)  as 'AVG Ultrasound extremities',sum(`Venous thrombosis imaging`)/count(distinct master_episode_id)  as 'AVG Venous thrombosis imaging',sum(`X-Ray Spine`)/count(distinct master_episode_id)  as 'AVG X-Ray Spine'from PAS_FLAG_allwhere left(episode_id, 2) in ("EP","EA") group by episode_id, level, filter_id, Facility_IDunionselectepisode_id,case when left(episodE_id, 2) in ("EP","EA") then Facility_ID else Physician_ID end as PROVIDER, level, 
 filter_id,count(distinct master_episodE_id) as episode_count,sum(case when PAS_flag >=1 then 1 else 0 end ) as PAS_EPISODE_COUNT,sum(case when PAS_flag >=1 then 1 else 0 end) /count(distinct master_episodE_id)  as PERCENT_PTS_W_PAS,sum(`PAS_costs`) as PAS_COSTS,sum(`PAS_costs`) /count(distinct master_episodE_id) as AVG_PAS_COSTS,sum(`Split_Total_Cost`) /count(distinct master_episodE_id) as AVG_SPLIT_COSTS,sum(`Annualized_Split_Total_Cost`) /count(distinct master_episodE_id) as AVG_ANNUAL_SPLIT_COSTS , sum(`Antibiotics`) as 'Antibiotics',sum(`Anticoagulant Management`) as 'Anticoagulant Management',sum(`Anticoagulants`) as 'Anticoagulants',sum(`Asthma inhalers`) as 'Asthma inhalers',sum(`Blood Gases, Pulse Oximetry`) as 'Blood Gases, Pulse Oximetry',sum(`Blood Transfusion`) as 'Blood Transfusion',sum(`Bone Density`) as 'Bone Density',sum(`Bone Scan`) as 'Bone Scan',sum(`Brain EEG`) as 'Brain EEG',sum(`Cardiac Cath and Angiography`) as 'Cardiac Cath and Angiography',sum(`Cardiac Stress Test`) as 'Cardiac Stress Test',sum(`Chest X-Ray`) as 'Chest X-Ray',sum(`CPAP and other Respiratory Treatments`) as 'CPAP and other Respiratory Treatments',sum(`CT abdomen`) as 'CT abdomen',sum(`CT or CTA Chest`) as 'CT or CTA Chest',sum(`CT or CTA Head`) as 'CT or CTA Head',sum(`CT or CTA pelvis`) as 'CT or CTA pelvis',sum(`CT or MRI facial area orbit post fossa`) as 'CT or MRI facial area orbit post fossa',sum(`CT soft tissues neck`) as 'CT soft tissues neck',sum(`CT Spine`) as 'CT Spine',sum(`DVT Management - IVC filter`) as 'DVT Management - IVC filter',sum(`DVT Management - Ligation of IVC`) as 'DVT Management - Ligation of IVC',sum(`Electrocardiogram`) as 'Electrocardiogram',sum(`Heart echo`) as 'Heart echo',sum(`Home visit`) as 'Home visit',sum(`Immunoglobulin Antibiodies`) as 'Immunoglobulin Antibiodies',sum(`Indwelling bladder catheter`) as 'Indwelling bladder catheter',sum(`Intravascular stent, thromboendarterectomy`) as 'Intravascular stent, thromboendarterectomy',sum(`Lab tests CBC Blood Chemistry`) as 'Lab tests CBC Blood Chemistry',sum(`Lipid Panel`) as 'Lipid Panel',sum(`Lung Function Tests`) as 'Lung Function Tests',sum(`Lung Percussion`) as 'Lung Percussion',sum(`Lung Scan`) as 'Lung Scan',sum(`MRI Brain`) as 'MRI Brain',sum(`MRI Chest`) as 'MRI Chest',sum(`MRI lower extremity`) as 'MRI lower extremity',sum(`MRI Spine`) as 'MRI Spine',sum(`MRI upper extremity`) as 'MRI upper extremity',sum(`Other Cardiac Imaging`) as 'Other Cardiac Imaging',sum(`Pain relief`) as 'Pain relief',sum(`Pap smear`) as 'Pap smear',sum(`PSA Screening`) as 'PSA Screening',sum(`Screening Pelvic Breast`) as 'Screening Pelvic Breast',sum(`Steroids`) as 'Steroids',sum(`Tests for allergens antibodies infectious agents`) as 'Tests for allergens antibodies infectious agents',sum(`Tumor Imaging`) as 'Tumor Imaging',sum(`Ultrasound abdomen / pelvis`) as 'Ultrasound abdomen / pelvis',sum(`Ultrasound extracranial arteries`) as 'Ultrasound extracranial arteries',sum(`Ultrasound extremities`) as 'Ultrasound extremities',sum(`Venous thrombosis imaging`) as 'Venous thrombosis imaging',sum(`X-Ray Spine`) as 'X-Ray Spine',sum(`Antibiotics`)/count(distinct master_episode_id)  as 'AVG Antibiotics',sum(`Anticoagulant Management`)/count(distinct master_episode_id)  as 'AVG Anticoagulant Management',sum(`Anticoagulants`)/count(distinct master_episode_id)  as 'AVG Anticoagulants',sum(`Asthma inhalers`) /count(distinct master_episode_id) as 'AVG Asthma inhalers',sum(`Blood Gases, Pulse Oximetry`)/count(distinct master_episode_id)  as 'AVG Blood Gases, Pulse Oximetry',sum(`Blood Transfusion`)/count(distinct master_episode_id)  as 'AVG Blood Transfusion',sum(`Bone Density`)/count(distinct master_episode_id)  as 'AVG Bone Density',sum(`Bone Scan`)/count(distinct master_episode_id)  as 'AVG Bone Scan',sum(`Brain EEG`)/count(distinct master_episode_id)  as 'AVG Brain EEG',sum(`Cardiac Cath and Angiography`)/count(distinct master_episode_id)  as 'AVG Cardiac Cath and Angiography',sum(`Cardiac Stress Test`)/count(distinct master_episode_id)  as 'AVG Cardiac Stress Test',sum(`Chest X-Ray`)/count(distinct master_episode_id)  as 'AVG Chest X-Ray',sum(`CPAP and other Respiratory Treatments`)/count(distinct master_episode_id)  as 'AVG CPAP and other Respiratory Treatments',sum(`CT abdomen`)/count(distinct master_episode_id)  as 'AVG CT abdomen',sum(`CT or CTA Chest`)/count(distinct master_episode_id)  as 'AVG CT or CTA Chest',sum(`CT or CTA Head`)/count(distinct master_episode_id)  as 'AVG CT or CTA Head',sum(`CT or CTA pelvis`)/count(distinct master_episode_id)  as 'AVG CT or CTA pelvis' ,sum(`CT or MRI facial area orbit post fossa`)/count(distinct master_episode_id)  as 'AVG CT or MRI facial area orbit post fossa',sum(`CT soft tissues neck`)/count(distinct master_episode_id)  as 'AVG CT soft tissues neck',sum(`CT Spine`)/count(distinct master_episode_id)  as 'AVG CT Spine',sum(`DVT Management - IVC filter`)/count(distinct master_episode_id)  as 'AVG DVT Management - IVC filter',sum(`DVT Management - Ligation of IVC`)/count(distinct master_episode_id)  as 'AVG DVT Management - Ligation of IVC',sum(`Electrocardiogram`)/count(distinct master_episode_id)  as 'AVG Electrocardiogram',sum(`Heart echo`)/count(distinct master_episode_id)  as 'AVG Heart echo',sum(`Home visit`)/count(distinct master_episode_id)  as 'AVG Home visit',sum(`Immunoglobulin Antibiodies`)/count(distinct master_episode_id)  as 'AVG Immunoglobulin Antibiodies',sum(`Indwelling bladder catheter`)/count(distinct master_episode_id)  as 'AVG Indwelling bladder catheter',sum(`Intravascular stent, thromboendarterectomy`)/count(distinct master_episode_id)  as 'AVG Intravascular stent, thromboendarterectomy',sum(`Lab tests CBC Blood Chemistry`)/count(distinct master_episode_id)  as 'AVG Lab tests CBC Blood Chemistry',sum(`Lipid Panel`)/count(distinct master_episode_id)  as 'AVG Lipid Panel',sum(`Lung Function Tests`)/count(distinct master_episode_id)  as 'AVG Lung Function Tests',sum(`Lung Percussion`)/count(distinct master_episode_id)  as 'AVG Lung Percussion',sum(`Lung Scan`)/count(distinct master_episode_id)  as 'AVG Lung Scan',sum(`MRI Brain`)/count(distinct master_episode_id) as 'AVG MRI Brain',sum(`MRI Chest`)/count(distinct master_episode_id)  as 'AVG MRI Chest',sum(`MRI lower extremity`) /count(distinct master_episode_id) as 'AVG MRI lower extremity',sum(`MRI Spine`)/count(distinct master_episode_id)  as 'AVG MRI Spine',sum(`MRI upper extremity`)/count(distinct master_episode_id)  as 'AVG MRI upper extremity',sum(`Other Cardiac Imaging`)/count(distinct master_episode_id)  as 'AVG Other Cardiac Imaging',sum(`Pain relief`) /count(distinct master_episode_id) as 'AVG Pain relief',sum(`Pap smear`) /count(distinct master_episode_id) as 'AVG Pap smear',sum(`PSA Screening`)/count(distinct master_episode_id)  as 'AVG PSA Screening',sum(`Screening Pelvic Breast`)/count(distinct master_episode_id)  as 'AVG Screening Pelvic Breast',sum(`Steroids`)/count(distinct master_episode_id)  as 'AVG Steroids',sum(`Tests for allergens antibodies infectious agents`)/count(distinct master_episode_id)  as 'AVG Tests for allergens antibodies infectious agents',sum(`Tumor Imaging`)/count(distinct master_episode_id)  as 'AVG Tumor Imaging',sum(`Ultrasound abdomen / pelvis`)/count(distinct master_episode_id)  as 'AVG Ultrasound abdomen / pelvis',sum(`Ultrasound extracranial arteries`)/count(distinct master_episode_id)  as 'AVG Ultrasound extracranial arteries',sum(`Ultrasound extremities`)/count(distinct master_episode_id)  as 'AVG Ultrasound extremities',sum(`Venous thrombosis imaging`)/count(distinct master_episode_id)  as 'AVG Venous thrombosis imaging',sum(`X-Ray Spine`)/count(distinct master_episode_id)  as 'AVG X-Ray Spine'from PAS_FLAG_allwhere left(episode_id, 2) in ("EC","EX") group by episode_id, level, filter_id, Physician_ID;drop table if exists PAS;drop table if exists PAS_by_epi;drop table if exists PAS_by_epi_sum;drop table if exists PAS_code;drop table if exists PAS_episodes;drop table if exists PAS_episodes_lines;drop table if exists PAS_episodes_lines_attrib;drop table if exists PAS_episodes_lines_attrib_code;drop table if exists PAS_episodes_lines_attrib_code_mel;drop table if exists PAS_flag;
