drop table if exists CHRONIC_CORE_CLMS_CNT_2;drop table if exists CHRONIC_CORE_CLMS_flag;drop table if exists CHRONIC_CLM;drop table if exists CHRONIC_CLM2;drop table if exists CHRONIC_CLM_CODE;drop table if exists CHRONIC_CORE_CLMS;drop table if exists CHRONIC_CORE_CLMS_CNT;drop table if exists CHRONIC_CORE_CLMS_CNT_TEMP;drop table if exists CHRONIC_CORE_CLMS_CNT_2;create table CHRONIC_CLM asselecta.member_id,a.master_claim_id,a.master_episode_id,a.claim_sourcefrom assignment awhere left(a.master_episode_id,2) = "EC"and a.claim_source <>'RX' and a.assigned_type='T'or left(a.master_episode_id,6) = "EX1502"and a.claim_source <>'RX' and a.assigned_type='T';
create table CHRONIC_CLM2 asselectCHRONIC_CLM.*,cl.begin_date,cl.end_date,cl.allowed_amt,cl.idfrom CHRONIC_CLMjoin claims_combined clon CHRONIC_CLM.master_claim_id=cl.master_claim_id;create table CHRONIC_CLM_CODE asselectCHRONIC_CLM2.*,c.code_value,c.nomenfrom CHRONIC_CLM2join code con CHRONIC_CLM2.id=c.u_c_idwhere c.nomen in ('HCPC','CPT','PX','PXX');create index cde on CHRONIC_CLM_CODE(code_value);create index cde1 on `episode_builder-5.4.005`.episode_to_code(code_value);create index cdev1 on `episode_builder-5.4.005`.code(value);create table CHRONIC_CORE_CLMS asselectleft(master_episode_id,6) as episode_id,CHRONIC_CLM_CODE.*,`episode_builder-5.4.005`.code.Group_ID as `Code Groups`,`episode_builder-5.4.005`.group.NAME as `Core Service Category`,`episode_builder-5.4.005`.episode_to_code.core_quantity as Core_Countfrom CHRONIC_CLM_CODEjoin `episode_builder-5.4.005`.episode_to_codeon CHRONIC_CLM_CODE.code_value=`episode_builder-5.4.005`.episode_to_code.code_value and left(CHRONIC_CLM_CODE.master_episode_id,6)=`episode_builder-5.4.005`.episode_to_code.episode_idjoin `episode_builder-5.4.005`.codeon `episode_builder-5.4.005`.episode_to_code.code_value=`episode_builder-5.4.005`.code.valuejoin `episode_builder-5.4.005`.groupon `episode_builder-5.4.005`.code.Group_ID=`episode_builder-5.4.005`.group.IDwhere `episode_builder-5.4.005`.episode_to_code.core =1 and `episode_builder-5.4.005`.episode_to_code.function_id='px' and `episode_builder-5.4.005`.code.type_id in ('PX','CPT','HCPC','PXX') and CHRONIC_CLM_CODE.nomen <> 'PXX'unionselectleft(master_episode_id,6) as episode_id,CHRONIC_CLM_CODE.*,`episode_builder-5.4.005`.code.Group_ID as `Code Groups`,`episode_builder-5.4.005`.group.NAME as `Core Service Category`,`episode_builder-5.4.005`.episode_to_code.core_quantity as Core_Countfrom CHRONIC_CLM_CODEjoin `episode_builder-5.4.005`.episode_to_codeon CHRONIC_CLM_CODE.code_value=`episode_builder-5.4.005`.`episode_to_code`.CODE_VALUE and left(CHRONIC_CLM_CODE.master_episode_id,6)=`episode_builder-5.4.005`.episode_to_code.episode_idjoin `episode_builder-5.4.005`.codeon `episode_builder-5.4.005`.`episode_to_code`.`CODE_VALUE`=`episode_builder-5.4.005`.code.valuejoin `episode_builder-5.4.005`.groupon `episode_builder-5.4.005`.code.Group_ID=`episode_builder-5.4.005`.group.IDwhere `episode_builder-5.4.005`.episode_to_code.core =1 and `episode_builder-5.4.005`.episode_to_code.function_id='px' and `episode_builder-5.4.005`.code.type_id in ('PX','CPT','HCPC','PXX') and CHRONIC_CLM_CODE.nomen = 'PXX';create table CHRONIC_CORE_CLMS_flag asselectCHRONIC_CORE_CLMS.episode_id,CHRONIC_CORE_CLMS.member_id,CHRONIC_CORE_CLMS.master_episode_id,Avg(CHRONIC_CORE_CLMS.allowed_amt) as Cost,episode.episode_begin_date,episode.episode_end_date,episode.attrib_default_physician,episode.attrib_default_facility,CHRONIC_CORE_CLMS.begin_Date,CHRONIC_CORE_CLMS.end_date,case when CHRONIC_CORE_CLMS.`code_value` in ('44388','44389','44390','44391','44392','44394','44401','44402','44403','44404','44405','44406','44407','44408','45330','45331','45332','45333','45334','45335','45337','45338','45340','45341','45342','45346','45347','45349','45350','45378','45379','45380','45381','45382','45384','45385','45386','45388','45389','45390','45391','45392','45393','45398','G0104','G0105','G0106','G0120','G0121','G6019','G6020','G6022','G6023','G6024','G6025','G9252','G9253') then 'Flexible Sigmoidoscopy /Colonoscopy'     when CHRONIC_CORE_CLMS.`code_value` in ('4422','4443','4444','4449','4513','4514','4516','43192','43193','43194',     '43195','43196','43197','43198','43200','43201','43202','43204','43205','43206','43211','43212','43213','43214','43215','43216','43217','43219','43220','43226','43227','43228','43229','43231','43232','43233','43234','43235','43236','43237','43238','43239','43240','43241','43242','43243','43244','43245','43246','43247','43248','43249','43250','43251','43252','43253','43254','43255','43256','43257','43258','43259','43266') then 'Upper GI endoscopy'	 else CHRONIC_CORE_CLMS.`Core Service Category` end as `Core Service Category` ,CHRONIC_CORE_CLMS.Core_Count,datediff(episode.episode_end_date,CHRONIC_CORE_CLMS.end_date) as DAY_FROM_EPI_END,datediff(CHRONIC_CORE_CLMS.begin_date,episode.episode_begin_date) as DAY_FROM_EPI_STARTfrom CHRONIC_CORE_CLMSjoin episodeon CHRONIC_CORE_CLMS.master_episode_id=episode.master_episode_idgroup by member_id, master_episode_id, `Core Service Category`, CHRONIC_CORE_CLMS.begin_date;create table CHRONIC_CORE_CLMS_CNT asselect'1' as Match_to,CHRONIC_CORE_CLMS_flag.episode_id,CHRONIC_CORE_CLMS_flag.member_id,CHRONIC_CORE_CLMS_flag.master_episode_id,CHRONIC_CORE_CLMS_flag.episode_begin_date,CHRONIC_CORE_CLMS_flag.episode_end_date,CHRONIC_CORE_CLMS_flag.attrib_default_physician,CHRONIC_CORE_CLMS_flag.attrib_default_facility,CHRONIC_CORE_CLMS_flag.`Core Service Category` as category,sum(case when DAY_FROM_EPI_END<=365 then CHRONIC_CORE_CLMS_flag.cost else 0 end)   as Catergory_Costs_365_back,sum(case when DAY_FROM_EPI_START<=365 then CHRONIC_CORE_CLMS_flag.cost else 0 end)   as Catergory_Costs_365_forward,CHRONIC_CORE_CLMS_flag.Core_Count,sum(case when DAY_FROM_EPI_END<=365 then 1 else 0 end)   as PT_CAT_COUNT_365_back,sum(case when DAY_FROM_EPI_START<=365 then 1 else 0 end)   as PT_CAT_COUNT_365_forward,case when sum(case when DAY_FROM_EPI_END<=365 then 1 else 0 end) = Core_Count then "MEET"when sum(case when DAY_FROM_EPI_END<=365 then 1 else 0 end) < Core_Count then "UNDER"when sum(case when DAY_FROM_EPI_END<=365 then 1 else 0 end) > Core_Count then "OVER" else "" end  as PT_CAT_USE_END,case when sum(case when DAY_FROM_EPI_START<=365 then 1 else 0 end) = Core_Count then "MEET"when sum(case when DAY_FROM_EPI_START<=365 then 1 else 0 end) < Core_Count then "UNDER"when sum(case when DAY_FROM_EPI_START<=365 then 1 else 0 end) > Core_Count then "OVER" else "" end  as PT_CAT_USE_STARTfrom CHRONIC_CORE_CLMS_flaggroup by member_id, master_episode_id, category;drop table if exists chronic_core_categories;create table chronic_core_categories asselect`episode_builder-5.4.005`.episode_to_code.episode_id,'1' as Match_to,`episode_builder-5.4.005`.code.Group_ID as `Code Groups`,`episode_builder-5.4.005`.group.NAME as `category`,`episode_builder-5.4.005`.episode_to_code.core_quantity as Core_Countfrom  `episode_builder-5.4.005`.episode_to_codejoin `episode_builder-5.4.005`.codeon `episode_builder-5.4.005`.episode_to_code.code_value=`episode_builder-5.4.005`.code.valuejoin `episode_builder-5.4.005`.groupon `episode_builder-5.4.005`.code.Group_ID=`episode_builder-5.4.005`.group.IDwhere `episode_builder-5.4.005`.episode_to_code.core =1 and `episode_builder-5.4.005`.episode_to_code.function_id='px' and `episode_builder-5.4.005`.code.type_id in ('PX','CPT','HCPC','PXX')group by `episode_builder-5.4.005`.group.NAME, `episode_builder-5.4.005`.episode_to_code.episode_idunionselect`episode_builder-5.4.005`.episode_to_code.episode_id,'1' as Match_to,`episode_builder-5.4.005`.code.Group_ID as `Code Groups`,`episode_builder-5.4.005`.group.NAME as `category`,`episode_builder-5.4.005`.episode_to_code.core_quantity as Core_Countfrom  `episode_builder-5.4.005`.episode_to_codejoin `episode_builder-5.4.005`.codeon `episode_builder-5.4.005`.episode_to_code.code_value=`episode_builder-5.4.005`.code.valuejoin `episode_builder-5.4.005`.groupon `episode_builder-5.4.005`.code.Group_ID=`episode_builder-5.4.005`.group.IDwhere `episode_builder-5.4.005`.episode_to_code.core =1 and `episode_builder-5.4.005`.episode_to_code.function_id='px' and `episode_builder-5.4.005`.code.type_id in ('PX','CPT','HCPC','PXX')group by `episode_builder-5.4.005`.group.NAME, `episode_builder-5.4.005`.episode_to_code.episode_id;create table CHRONIC_CORE_CLMS_CNT_TEMP asselectchronic_core_categories.episode_id,CHRONIC_CORE_CLMS_CNT.member_id,CHRONIC_CORE_CLMS_CNT.master_episode_id,CHRONIC_CORE_CLMS_CNT.episode_begin_date,CHRONIC_CORE_CLMS_CNT.episode_end_date,CHRONIC_CORE_CLMS_CNT.attrib_default_physician,CHRONIC_CORE_CLMS_CNT.attrib_default_facility,chronic_core_categories.category,chronic_core_categories.core_count,CHRONIC_CORE_CLMS_CNT.Catergory_Costs_365_back,CHRONIC_CORE_CLMS_CNT.Catergory_Costs_365_forward,CHRONIC_CORE_CLMS_CNT.PT_CAT_COUNT_365_back,CHRONIC_CORE_CLMS_CNT.PT_CAT_COUNT_365_forward,CHRONIC_CORE_CLMS_CNT.PT_CAT_USE_END,CHRONIC_CORE_CLMS_CNT.PT_CAT_USE_STARTfrom CHRONIC_CORE_CLMS_CNTright join chronic_core_categorieson CHRONIC_CORE_CLMS_CNT.episode_id=chronic_core_categories.episode_id and CHRONIC_CORE_CLMS_CNT.category=chronic_core_categories.categoryand CHRONIC_CORE_CLMS_CNT.Match_to=chronic_core_categories.Match_tounionselectchronic_core_categories.episode_id,CHRONIC_CORE_CLMS_CNT.member_id,CHRONIC_CORE_CLMS_CNT.master_episode_id,CHRONIC_CORE_CLMS_CNT.episode_begin_date,CHRONIC_CORE_CLMS_CNT.episode_end_date,CHRONIC_CORE_CLMS_CNT.attrib_default_physician,CHRONIC_CORE_CLMS_CNT.attrib_default_facility,chronic_core_categories.category,chronic_core_categories.core_count,CHRONIC_CORE_CLMS_CNT.Catergory_Costs_365_back,CHRONIC_CORE_CLMS_CNT.Catergory_Costs_365_forward,0 as PT_CAT_COUNT_365_back,0 as PT_CAT_COUNT_365_forward,"UNDER" as PT_CAT_USE_END,"UNDER" as PT_CAT_USE_STARTfrom CHRONIC_CORE_CLMS_CNTright  join chronic_core_categorieson CHRONIC_CORE_CLMS_CNT.episode_id=chronic_core_categories.episode_idand CHRONIC_CORE_CLMS_CNT.Match_to=chronic_core_categories.Match_to;create table CHRONIC_CORE_CLMS_CNT_2 asselectepisode_id,member_id,master_episode_id,episode_begin_date,episode_end_date,attrib_default_physician,attrib_default_facility,category,core_count,sum(PT_CAT_COUNT_365_back) as Catergory_Costs_365_back,sum(PT_CAT_COUNT_365_forward)  as Catergory_Costs_365_forward,sum(PT_CAT_COUNT_365_back) as PT_CAT_COUNT_365_back,sum(PT_CAT_COUNT_365_forward) as PT_CAT_COUNT_365_forward,case when max(PT_CAT_COUNT_365_back) then PT_CAT_USE_END      when core_count=0 and PT_CAT_COUNT_365_back=0 then "MEET"else "UNDER" end as PT_CAT_USE_END, case when max(PT_CAT_COUNT_365_forward) then PT_CAT_USE_START       when core_count=0 and PT_CAT_COUNT_365_forward=0 then "MEET"  else "UNDER" end as PT_CAT_USE_STARTfrom CHRONIC_CORE_CLMS_CNT_TEMPgroup by episodE_id, member_id, master_episode_id, category;drop table if exists CHRONIC_CLM;drop table if exists CHRONIC_CLM2;drop table if exists CHRONIC_CLM_CODE ;drop table if exists CHRONIC_CORE_CLMS ;drop table if exists CHRONIC_CORE_CLMS_CNT ;drop table if exists CHRONIC_CORE_CLMS_CNT_TEMP;